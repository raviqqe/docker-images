require 'nginx-conf'

require_relative '../ruby/docker'
require_relative '../config'



cert_path = '/root/cert.pem'
key_path = '/root/key.pem'
socket_path = '/var/run/fcgiwrap.socket'
htpasswd_file = 'htpasswd'
git_dir = '/git'

conf = nginx_conf do
  daemon :off
  user :root

  events do
  end

  http do
    include 'mime.types'

    server do
      listen 443, :ssl

      ssl_certificate     cert_path
      ssl_certificate_key key_path

      location '/' do
        set '$realm', '"Restricted"'

        if_ '$arg_service ~ git-upload-pack' do
          set '$realm', :off
        end

        if_ '$uri ~ /git-upload-pack$' do
          set '$realm', :off
        end

        auth_basic '$realm'
        auth_basic_user_file htpasswd_file

        include 'fastcgi_params'
        fastcgi_param :SCRIPT_FILENAME, '/usr/lib/git-core/git-http-backend'
        fastcgi_param :GIT_PROJECT_ROOT, git_dir
        fastcgi_param :GIT_HTTP_EXPORT_ALL, '""'
        fastcgi_param :PATH_INFO, '$uri' # not $fastcgi_path_info!
        fastcgi_param :PATH_TRANSLATED, '$document_root$fastcgi_path_info'
        fastcgi_param :REMOTE_USER, '$remote_user'
        fastcgi_pass "unix:#{socket_path}"
      end
    end
  end
end


File.write 'nginx.conf', conf
copy File.join(__dir__, "../security", htpasswd_file), htpasswd_file


docker_tasks :git, "-p #{GIT_PORT}:443 \
                    -v #{GIT_REPO_VOLUME}:#{git_dir} \
                    -v #{CERT_PATH}:#{cert_path} \
                    -v #{KEY_PATH}:#{key_path}" do
  run 'apt -y install nginx git fcgiwrap'

  copy 'nginx.conf', '/etc/nginx/nginx.conf'
  copy htpasswd_file, "/etc/nginx/#{htpasswd_file}"

  expose 443

  cmd "spawn-fcgi -s #{socket_path} /usr/sbin/fcgiwrap && nginx"
end
